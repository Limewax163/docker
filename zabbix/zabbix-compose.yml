version: "3.9"
services:
  zabbix-postgres:
    image: postgres:15
    volumes:
      - zabbix-postgres:/var/lib/postgresql
    env_file:
      - .zabbix-postgres-env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      zabbix-network:
        ipv4_address: xxx.xxx.xxx.xxx

  zabbix-redis:
    image: redis
    restart: always
    env_file:
      - ./.zabbix-redis-env
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      zabbix-network:
        ipv4_address: xxx.xxx.xxx.xxx

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:6.4.6-ubuntu
    env_file:
      - .zabbix-server-env
    healthcheck:
      test: grep -qr "zabbix_server" /proc/*/status || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    depends_on:
      zabbix-postgres:
        condition: service_healthy
      zabbix-redis:
        condition: service_started
    links:
      - zabbix-postgres
      - zabbix-redis
    networks:
      zabbix-network:
        ipv4_address: xxx.xxx.xxx.xxx


  zabbix-dashboard:
    image: zabbix/zabbix-web-nginx-pgsql:6.4.6-ubuntu
    environment:
      ZBX_SERVER_NAME: Zabbix server
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      DB_SERVER_HOST: db
      DB_SERVER_PORT: 5432
      REDIS_HOST_PASSWORD: ${REDIS_PASSWORD}
    env_file:
      - .zabbix-dashboard-env
    ports:
      - 10000:8080
    restart: unless-stopped
    depends_on:
      zabbix-postgres:
        condition: service_healthy
      zabbix-redis:
        condition: service_started
    links:
      - zabbix-postgres
      - zabbix-redis
    networks:
      zabbix-network:
        ipv4_address: xxx.xxx.xxx.xxx

#  zabbix-agent:
#    image: zabbix/zabbix-agent2:6.4.6-ubuntu
#    environment:
#      ZBX_HOSTNAME: zabbix-server
#      ZBX_SERVER_HOST: zabbix-server
#      REDIS_HOST_PASSWORD: ${REDIS_PASSWORD}
#    restart: unless-stopped
#    depends_on:
#      - zabbix-postgres
#      - zabbix-server
#      - zabbix-redis
#    links:
#      - zabbix-postgres
#      - zabbix-server
#      - zabbix-redis
networks:
  zabbix-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: xxx.xxx.xxx.xxx/xx
      options:
        com.docker.network.bridge.enable_ip_masquerade: "true"

volumes:
  zabbix-postgres
